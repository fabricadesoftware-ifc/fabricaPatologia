---

image: debian:buster-slim

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PROD_HOST: "patologia@patologia.fabricadesoftware.ifc.edu.br"
  PROD_PATH: "/srv/patologia"

stages:
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cache/pip/

deploy_production:
  stage: deploy
  only:
    - master
  script:
    - |
      cat << EOF >LapVet/LapVet/.env
      SECRET_KEY=$PROD_SECRET_KEY
      DATABASE_URL=postgres://patologia@/patologia
      ALLOWED_HOSTS=patologia.fabricadesoftware.ifc.edu.br,127.0.0.1
      DEBUG=False
      EOF
    - apt-get update -y
    - apt-get install -yqq openssh-client rsync
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "[patologia.fabricadesoftware.ifc.edu.br]:1022 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAQHt8NDADsuuX0yyLocmnA+L4MLEyrQZvSV7M0KRz9m" >> ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$PROD_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh -p 1022 $PROD_HOST "mkdir -p $PROD_PATH/code"
    - rsync -rtz --delete -e 'ssh -p 1022' ./ "$PROD_HOST:$PROD_PATH/code/"
    - ssh -p 1022 $PROD_HOST "cd "$PROD_PATH" && ([ -d \"venv\" ] || virtualenv -p python3 venv)"
    - ssh -p 1022 $PROD_HOST "cd "$PROD_PATH" && ./venv/bin/pip install -r code/LapVet/requirements.txt"
    - ssh -p 1022 $PROD_HOST "cd "$PROD_PATH/code" && PYTHONPATH='.' ../venv/bin/python LapVet/manage.py migrate"
    - ssh -p 1022 $PROD_HOST "cd "$PROD_PATH/code" && PYTHONPATH='.' ../venv/bin/python LapVet/manage.py collectstatic"
    - ssh -p 1022 $PROD_HOST "mkdir -p $PROD_PATH/media && ln -s $PROD_PATH/media $PROD_PATH/code/LapVet/media"
    - ssh -p 1022 $PROD_HOST "sudo systemctl restart netfab-django-gunicorn-patologia.service"
  environment:
    name: production
    url: https://patologia.fabricadesoftware.ifc.edu.br
